find_package(Nasm REQUIRED)
find_package(Pin REQUIRED)

SET_SOURCE_FILES_PROPERTIES( "${CMAKE_CURRENT_BINARY_DIR}/test_a.auto.obj"
	PROPERTIES
	EXTERNAL_OBJECT true
	GENERATED true
	)

add_custom_target(test_a.auto.asm ALL
	COMMAND ${PYTHON_EXECUTABLE} "${CMAKE_CURRENT_SOURCE_DIR}/../testgen.py" 
		-tstmpl "${CMAKE_CURRENT_SOURCE_DIR}/../testSemantics/testSemantics.template" 
		-taout "${CMAKE_CURRENT_SOURCE_DIR}/test_a.auto.asm"
		-testfiles "${CMAKE_CURRENT_SOURCE_DIR}/../tests" 
		-nasm "${NASM_EXECUTABLE}"
	COMMENT Generating semantics tests asm file
	)

if(WIN32)
add_custom_target(test_a.auto.obj ALL
	COMMAND ${NASM_EXECUTABLE} 
		--prefix _ 
		-f win 
		-o "${CMAKE_CURRENT_BINARY_DIR}/test_a.auto.obj"
		"${CMAKE_CURRENT_SOURCE_DIR}/test_a.auto.asm"
	DEPENDS test_a.auto.asm
	COMMENT Assembling autogenerated semantics tests

	)
else(WIN32)
	if(APPLE)
		add_custom_target(test_a.auto.obj ALL
			COMMAND ${NASM_EXECUTABLE} 
				-f macho32
				-o "${CMAKE_CURRENT_BINARY_DIR}/test_a.auto.obj"
				"${CMAKE_CURRENT_SOURCE_DIR}/test_a.auto.asm"
			DEPENDS test_a.auto.asm
			COMMENT Assembling autogenerated semantics tests
		
			)
	else(APPLE)
		add_custom_target(test_a.auto.obj ALL
			COMMAND ${NASM_EXECUTABLE} 
				-f elf32
				-o "${CMAKE_CURRENT_BINARY_DIR}/test_a.auto.obj"
				"${CMAKE_CURRENT_SOURCE_DIR}/test_a.auto.asm"
			DEPENDS test_a.auto.asm
			COMMENT Assembling autogenerated semantics tests
		
			)
	endif(APPLE)
endif(WIN32)

add_dependencies(test_a.auto.obj test_a.auto.asm Pin)

add_executable(valTest test.c "${CMAKE_CURRENT_BINARY_DIR}/test_a.auto.obj")
if(NOT WIN32)
set_target_properties(valTest PROPERTIES COMPILE_FLAGS "-m32")
set_target_properties(valTest PROPERTIES LINK_FLAGS "-m32")
endif(NOT WIN32)

add_dependencies(valTest test_a.auto.obj Pin)

get_target_property(VALTEST_EXECUTABLE valTest LOCATION)
get_filename_component(VALTEST_PATH ${VALTEST_EXECUTABLE} PATH)
if(WIN32)
add_custom_target(tests.out ALL
	${PIN_EXECUTABLE}
		-t "${CMAKE_CURRENT_SOURCE_DIR}/../valTool/obj-ia32/val.dll" -- "${VALTEST_EXECUTABLE}"
	WORKING_DIRECTORY "${VALTEST_PATH}"
	COMMENT Running PIN to generate ground truth for semantics tests
	DEPENDS valTest
	)
else(WIN32)
add_custom_target(tests.out ALL
	${PIN_EXECUTABLE} "-injection" "child" -t "${CMAKE_CURRENT_SOURCE_DIR}/../valTool/val.so" -- "${VALTEST_EXECUTABLE}"
	WORKING_DIRECTORY "${VALTEST_PATH}"
	COMMENT Running PIN to generate ground truth for semantics tests
	DEPENDS valTest
	)
endif(WIN32)

IF(APPLE)
    SET_TARGET_PROPERTIES(valTest PROPERTIES LINK_FLAGS "-pagezero_size 1000 -arch x86_64")
endif(APPLE)
